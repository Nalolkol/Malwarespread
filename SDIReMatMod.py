#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Feb 10 14:18:22 2022

@author: noahakesson
"""
import numpy as np
import matplotlib.pyplot as plt

#%% Values and parameters

S = 100000
D = 100
I = 10
Re = 0
N = S + I + D + Re

t = 0

Beta = 100.0 # kontakt rate S till D
Alpha = 0.8 # transistion fr√•n D till I
Epsilon = 2.8 # transition D till Re
Gamma = 0.5 #transition I to Re

suseptible = np.array(S)
delitescen = np.array(D)
infected = np.array(I)
recovered = np.array(Re)
time = np.array(t)

WSD = (Beta*S*I)/N  
WDI = (Alpha*D)
WDRe = (Epsilon*D)
WIRe = (Gamma*Re)
    
R = WSD + WDI + WDRe + WIRe
    
PSD = WSD / R
PDI = WDI / R
PDRe = WDRe / R
PIRe = WIRe / R
    
#%% Main code

while (t < 500000000000):
    
    if (I==0):
        break
    
    if (R < 0.00001):
        R=0.00001
    
    T = np.random.exponential(scale = R)
    t = t + T
    Y = np.random.uniform(low = 0, high = R)
    
    if (Y < WSD):
        D = D + 1
        S = S - 1
    elif (Y < (WSD + WDI)):
        I = I + 1
        D = D - 1
    elif (Y < (WSD + WDI + WDRe)):
        Re = Re + 1
        D = D - 1
    elif(Y < (WSD + WDI + WDRe + WIRe)):
        Re = Re + 1
        I = I - 1
        

        
    N = S + D + I + Re
    WSD = (Beta*S*I)/N  
    WDI = (Alpha*D)
    WDRe = (Epsilon*D)
    WIRe = (Gamma*Re)
    R = WSD + WDI + WDRe + WIRe
    
    suseptible = np.append(suseptible,S)
    delitescen = np.append(delitescen,D)
    infected = np.append(infected, I)
    recovered = np.append(recovered, Re)
    time = np.append(time, t) 

#%% Plotting

fig1 = plt.figure()
plt.plot(time,infected)
plt.xlabel('Time')
plt.ylabel('Number of (see legend)')
plt.legend('infected')

fig2 = plt.figure()
plt.plot(time,delitescen)
plt.xlabel('Time')
plt.ylabel('Number of (see legend)')
plt.legend('delitescen')

fig3 = plt.figure()
plt.plot(time,suseptible)
plt.xlabel('Time')
plt.ylabel('Number of (see legend)')
plt.legend('suseptible')

fig4 = plt.figure()
plt.plot(time,recovered)
plt.xlabel('Time')
plt.ylabel('Number of (see legend)')
plt.legend('recovered')

fig5 = plt.figure()
plt.plot(time,infected)
plt.plot(time,delitescen)
plt.plot(time,suseptible)
plt.plot(time,recovered)
plt.xlabel('Time')
plt.ylabel('Number of (see legend)')
plt.legend(['infected', 'delitescen','suseptible','recovered'])
